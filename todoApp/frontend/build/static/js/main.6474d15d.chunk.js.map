{"version":3,"sources":["store/store.js","components/Login.jsx","components/AddTask.jsx","components/TodoItem.jsx","components/TodoList.jsx","components/Main.jsx","components/Header.jsx","App.js","reportWebVitals.js","index.js"],"names":["REACT_APP_BASE_URL","process","customFetch","url","method","variables","fetch","headers","localStorage","authToken","Authorization","body","JSON","stringify","then","res","json","getRequestLogin","getRequestToApi","jwtDecode","token","parse","atob","split","e","Error","actionAuthLogout","type","actionAuthLogin","actionPending","name","status","actionFulfilled","payload","actionRejected","error","actionClear","actionPromise","promise","dispatch","a","reducers","combineReducers","state","auth","undefined","console","log","removeItem","store","createStore","applyMiddleware","thunk","getState","CLogin","connect","getLogin","userName","useState","login","setLogin","className","onChange","target","value","placeholder","to","onClick","CAddTask","createTusk","todoData","data","setData","maxLength","CTodoItem","getUpdate","id","isDone","requestToUpdate","getDelete","requestToDelete","getEdit","_id","check","setCheck","edit","setEdit","editData","setEditData","checked","CTodoList","posts","allPosts","reverse","map","item","toString","Main","CHeader","currentUser","getLogout","history","createHistory","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6474d15d.chunk.js","sourcesContent":["import { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst { REACT_APP_BASE_URL } = process.env;\r\n\r\nconst customFetch = url =>\r\n    (method, variables) => fetch(url, {\r\n        method: method,\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            ...(localStorage.authToken ? { Authorization: 'Bearer ' + localStorage.authToken } : {})\r\n        },\r\n        ...(variables ? { body: JSON.stringify(variables) } : {})\r\n    }).then(res => res.json());\r\n\r\nconst getRequestLogin = customFetch(`${REACT_APP_BASE_URL}/login`);\r\nconst getRequestToApi = customFetch(`${REACT_APP_BASE_URL}/api/todo`);\r\n\r\nexport function promiseReducer (state = {}, { type, name, status, payload, error }) {\r\n    if (type === 'PROMISE') {\r\n        return {\r\n            ...state,\r\n            [name]: { status, payload, error }\r\n        };\r\n    }\r\n    if (type === 'CLEAR') {\r\n        return {};\r\n    }\r\n    return state;\r\n}\r\n\r\nconst authReducer = function (state, { type, token }) {\r\n    let payload;\r\n\r\n    if (state === undefined) {\r\n        if (localStorage.authToken) {\r\n            type = 'AUTH_LOGIN';\r\n            token = localStorage.authToken;\r\n        } else {\r\n            type = 'AUTH_LOGOUT';\r\n        };\r\n    };\r\n    if (type === 'AUTH_LOGIN') {\r\n        payload = jwtDecode(token);\r\n        console.log(payload);\r\n        if (payload) {\r\n            localStorage.authToken = token;\r\n            return {\r\n                token: token,\r\n                payload: payload\r\n            };\r\n        }\r\n    }\r\n    if (type === 'AUTH_LOGOUT') {\r\n        localStorage.removeItem('authToken');\r\n\r\n        return {};\r\n    };\r\n\r\n    return state || {};\r\n};\r\n\r\nexport const jwtDecode = (token) => {\r\n    try {\r\n        return JSON.parse(atob(token.split('.')[1]));\r\n    } catch (e) {\r\n        throw new Error(e);\r\n    }\r\n};\r\n\r\nexport const actionFullLogout = () =>\r\n    async dispatch => {\r\n        await dispatch(actionAuthLogout());\r\n        dispatch(actionClear());\r\n    };\r\nconst actionAuthLogout = () => ({ type: 'AUTH_LOGOUT' });\r\nconst actionAuthLogin = token => ({ type: 'AUTH_LOGIN', token });\r\nconst actionPending = name => ({ type: 'PROMISE', name, status: 'PENDING' });\r\nconst actionFulfilled = (name, payload) => ({ type: 'PROMISE', name, status: 'FULFILLED', payload });\r\nconst actionRejected = (name, error) => ({ type: 'PROMISE', name, status: 'REJECTED', error });\r\nconst actionClear = (name, error) => ({ type: 'CLEAR' });\r\nconst actionPromise = (name, promise) =>\r\n    async dispatch => {\r\n        dispatch(actionPending(name));\r\n        try {\r\n            const payload = await promise;\r\n            dispatch(actionFulfilled(name, payload));\r\n            return payload;\r\n        } catch (error) {\r\n            dispatch(actionRejected(name, error));\r\n        }\r\n    };\r\n\r\nexport const actionFullLogin = (userName) =>\r\n    async (dispatch, getState) => {\r\n        const token = await dispatch(actionPromise('login', getRequestLogin('POST', { userName })));\r\n        if (token) {\r\n            await dispatch(actionAuthLogin(token.token));\r\n            dispatch(actionPromise('allPosts', getRequestToApi('GET')));\r\n        }\r\n    };\r\n\r\nexport const actionLogin = () =>\r\n    async (dispatch, getState) => {\r\n        const token = localStorage.authToken;\r\n        if (token) {\r\n            await dispatch(actionAuthLogin(token));\r\n            dispatch(actionPromise('allPosts', getRequestToApi('GET')));\r\n        }\r\n    };\r\n\r\nexport const actionChange = (id, todoData, isDone) =>\r\n    async dispatch => {\r\n        const requestToUpdate = customFetch(`${REACT_APP_BASE_URL}/api/todo/${id}`);\r\n        dispatch(actionPromise('update', requestToUpdate('PUT', { todoData, isDone })));\r\n    };\r\n\r\nexport const actionEdit = (id, todoData, isDone) =>\r\n    async dispatch => {\r\n        const requestToUpdate = customFetch(`${REACT_APP_BASE_URL}/api/todo/${id}`);\r\n        await dispatch(actionPromise('update', requestToUpdate('PUT', { todoData, isDone })));\r\n        dispatch(actionPromise('allPosts', getRequestToApi('GET')));\r\n    };\r\n\r\nexport const actionDelete = (id) =>\r\n    async dispatch => {\r\n        const requestToDelete = customFetch(`${REACT_APP_BASE_URL}/api/todo/${id}`);\r\n        await dispatch(actionPromise('remove', requestToDelete('DELETE', { id })));\r\n        dispatch(actionPromise('allPosts', getRequestToApi('GET')));\r\n    };\r\n\r\nexport const actionCreate = (todoData) =>\r\n    async dispatch => {\r\n        await dispatch(actionPromise('create', getRequestToApi('POST', { todoData })));\r\n        dispatch(actionPromise('allPosts', getRequestToApi('GET')));\r\n    };\r\n\r\nexport const reducers = combineReducers({ promise: promiseReducer, auth: authReducer });\r\n\r\nexport const store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nstore.dispatch(actionLogin());\r\nconsole.log(REACT_APP_BASE_URL);\r\n","/* eslint-disable react/prop-types */\r\nimport React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport { actionFullLogin } from '../store/store';\r\n\r\nconst Login = ({ getLogin }) => {\r\n    const [login, setLogin] = useState('');\r\n    return (\r\n        <div className='Login'>\r\n            <h1>Login</h1>\r\n            <input type=\"text\" onChange={(e) => setLogin(e.target.value) } placeholder='input login...'/>\r\n            <Link className=\"loginLink\" to=\"/\"><button onClick={() => getLogin(login)}>Login</button></Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const CLogin = connect(null, { getLogin: actionFullLogin })(Login);\r\n","/* eslint-disable react/prop-types */\r\nimport React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { actionCreate } from '../store/store';\r\n\r\nconst AddTask = ({ createTusk }) => {\r\n    const [data, setData] = useState('');\r\n    return (\r\n        <div className=\"AddTusk\">\r\n            <textarea onChange={(e) => setData(e.target.value) } maxLength=\"108\" placeholder=\"type some tusk...\"/>\r\n            <button onClick={() => { createTusk(data); setData(''); }}>ADD</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const CAddTask = connect(null, { createTusk: actionCreate })(AddTask);\r\n","/* eslint-disable react/prop-types */\r\nimport React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { actionChange, actionDelete, actionEdit } from '../store/store';\r\n\r\nexport const TodoItem = ({ data, getUpdate, getDelete, getEdit }) => {\r\n    const { _id, todoData, isDone } = data;\r\n    const [check, setCheck] = useState(isDone);\r\n    const [edit, setEdit] = useState(false);\r\n    const [editData, setEditData] = useState(todoData);\r\n\r\n    return (\r\n        <li>\r\n            <div className=\"check\">\r\n                <label className=\"container\">\r\n                    <input onChange={() => { setCheck(!check); getUpdate(_id, editData, !check); }} checked={check} type=\"checkbox\"/>\r\n                    <span className=\"checkmark\"></span>\r\n                </label>\r\n            </div>\r\n            <div className=\"tusk\">\r\n                {\r\n                    edit\r\n                        ? <input type=\"text\" value={editData} onChange={(e) => setEditData(e.target.value)}/>\r\n                        : <p className={`${check ? 'line-through' : ''}`}>{todoData}</p>\r\n                }\r\n            </div>\r\n            <div className=\"delete\">\r\n                <button onClick={() => getDelete(_id)}>\r\n                    DELETE\r\n                </button>\r\n            </div>\r\n            <div className=\"edit\">\r\n                {\r\n                    edit\r\n                        ? <button onClick={ () => getEdit(_id, editData, check) } >SAVE</button>\r\n                        : <button onClick={ () => { setEdit(!edit); setEdit(!edit); }} >EDIT</button>\r\n                };\r\n            </div>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport const CTodoItem = connect(null, { getUpdate: actionChange, getDelete: actionDelete, getEdit: actionEdit })(TodoItem);\r\n","/* eslint-disable react/prop-types */\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { CTodoItem } from './TodoItem';\r\n\r\nexport const TodoList = ({ posts }) => {\r\n    return (\r\n        <ul>\r\n            {posts.reverse().map(item => <CTodoItem key={`${item._id}`} id={item._id.toString()} data={item}/>)}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport const CTodoList = connect(state => ({ posts: state?.promise?.allPosts?.payload || [] }))(TodoList);\r\n","import React from 'react';\r\nimport { CAddTask } from './AddTask';\r\nimport { CTodoList } from './TodoList';\r\n\r\nconst Main = () => {\r\n    return (\r\n        <div className=\"content\">\r\n            <h1>TODO List</h1>\r\n            <CAddTask />\r\n            <CTodoList />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n","/* eslint-disable react/prop-types */\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport { actionFullLogout } from '../store/store';\r\n\r\nconst Header = ({ getLogout, currentUser }) => {\r\n    return (\r\n        <header>\r\n            <ul>\r\n                <li><Link className=\"Link\" to=\"/\">TodoList</Link></li>\r\n                <li><Link className=\"Link\" to=\"/loginF\">Login</Link></li>\r\n                <li onClick={() => getLogout()}>Logout[{ currentUser }]</li>\r\n            </ul>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport const CHeader = connect(state => ({ currentUser: state?.auth?.payload?.userName || 'anon' }), { getLogout: actionFullLogout })(Header);\r\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\nimport { Router, Route, Switch } from 'react-router-dom';\nimport createHistory from 'history/createBrowserHistory';\nimport { CLogin } from './components/Login';\nimport Main from './components/Main';\nimport { CHeader } from './components/Header';\n\nconst history = createHistory();\n\nfunction App () {\n    return (\n        <Router history={history}>\n            <Provider store={store}>\n                <CHeader />\n                <div className=\"App\">\n                    <Switch>\n                        <Route path=\"/\" exact component={Main}/>\n                        <Route path=\"/loginF\" exact component={CLogin}/>\n                    </Switch>\n                </div>\n            </Provider>\n        </Router>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}